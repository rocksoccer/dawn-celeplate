{% comment %}
=======================================================
This file is managed by MagicPass. Do not modify.
To remove, please click "Remove from store" in our app.
https://apps.shopify.com/password-protected-pages
=======================================================
{% endcomment %}



{% include 'password-protect-variables' %}





{% assign access_granted = false %}
{% assign page_has_lock = false %}
{% assign last_login_title = nil %}
{% assign show_customer_login = false %}
{% assign authorized_passwords = cart.attributes['authorized_passwords'] | split: ',' %}

{% if template.name == "product" %}
  {% assign encoded_locks = collection_locks_str | split: "&" %}
  {% assign valid_lock_ids = product.collections | map: "id" | join: ',' | split: ',' %} 
    {% unless access_granted %}
    {% for encoded_lock in encoded_locks %}
      {% assign lock_attributes = encoded_lock | url_decode | split: '&' %}
      {% assign lock_entity_id      = lock_attributes[0] %}
      {% assign lock_type           = lock_attributes[1] %}
      {% assign lock_key            = lock_attributes[2] | url_decode %}
      {% assign lock_escaped_title  = lock_attributes[3] %}

      {% if valid_lock_ids contains lock_entity_id %}
        {% assign page_has_lock = true %}
        {% if lock_type == "password" %}
          {% if authorized_passwords contains lock_key %}
            {% assign access_granted = true %}
          {% else %}
            {% assign show_customer_login = false %}
          {% endif %}
        {% elsif lock_type == "tags" %}
          {% assign lock_tags = lock_key | split: '&' %}
          {% for encoded_lock_tag in lock_tags %}
            {% assign lock_tag = encoded_lock_tag | url_decode %}
            {% if customer.tags contains lock_tag %}
              {% assign access_granted = true %}
            {% endif %}
          {% endfor %}
          {% unless access_granted %}
            {% assign show_customer_login = true %}
          {% endunless %}
        {% endif %}
        {% unless access_granted %}
          {% assign last_login_title = lock_escaped_title | url_decode %}
        {% endunless %}
      {% endif %}
    {% endfor %}
  {% endunless %}

  {% assign encoded_locks = product_locks_str | split: "&" %}
  {% assign valid_lock_ids = product.id | downcase | split: "cast_to_array" %}
    {% unless access_granted %}
    {% for encoded_lock in encoded_locks %}
      {% assign lock_attributes = encoded_lock | url_decode | split: '&' %}
      {% assign lock_entity_id      = lock_attributes[0] %}
      {% assign lock_type           = lock_attributes[1] %}
      {% assign lock_key            = lock_attributes[2] | url_decode %}
      {% assign lock_escaped_title  = lock_attributes[3] %}

      {% if valid_lock_ids contains lock_entity_id %}
        {% assign page_has_lock = true %}
        {% if lock_type == "password" %}
          {% if authorized_passwords contains lock_key %}
            {% assign access_granted = true %}
          {% else %}
            {% assign show_customer_login = false %}
          {% endif %}
        {% elsif lock_type == "tags" %}
          {% assign lock_tags = lock_key | split: '&' %}
          {% for encoded_lock_tag in lock_tags %}
            {% assign lock_tag = encoded_lock_tag | url_decode %}
            {% if customer.tags contains lock_tag %}
              {% assign access_granted = true %}
            {% endif %}
          {% endfor %}
          {% unless access_granted %}
            {% assign show_customer_login = true %}
          {% endunless %}
        {% endif %}
        {% unless access_granted %}
          {% assign last_login_title = lock_escaped_title | url_decode %}
        {% endunless %}
      {% endif %}
    {% endfor %}
  {% endunless %}

{% elsif template.name == "collection" %}
  {% assign encoded_locks = collection_locks_str | split: "&" %}
  {% assign valid_lock_ids = collection.id | downcase | split: "cast_to_array" %}
    {% unless access_granted %}
    {% for encoded_lock in encoded_locks %}
      {% assign lock_attributes = encoded_lock | url_decode | split: '&' %}
      {% assign lock_entity_id      = lock_attributes[0] %}
      {% assign lock_type           = lock_attributes[1] %}
      {% assign lock_key            = lock_attributes[2] | url_decode %}
      {% assign lock_escaped_title  = lock_attributes[3] %}

      {% if valid_lock_ids contains lock_entity_id %}
        {% assign page_has_lock = true %}
        {% if lock_type == "password" %}
          {% if authorized_passwords contains lock_key %}
            {% assign access_granted = true %}
          {% else %}
            {% assign show_customer_login = false %}
          {% endif %}
        {% elsif lock_type == "tags" %}
          {% assign lock_tags = lock_key | split: '&' %}
          {% for encoded_lock_tag in lock_tags %}
            {% assign lock_tag = encoded_lock_tag | url_decode %}
            {% if customer.tags contains lock_tag %}
              {% assign access_granted = true %}
            {% endif %}
          {% endfor %}
          {% unless access_granted %}
            {% assign show_customer_login = true %}
          {% endunless %}
        {% endif %}
        {% unless access_granted %}
          {% assign last_login_title = lock_escaped_title | url_decode %}
        {% endunless %}
      {% endif %}
    {% endfor %}
  {% endunless %}

{% elsif template.name == "page" %}
  {% assign encoded_locks = page_locks_str | split: "&" %}
  {% assign valid_lock_ids = page.id | downcase | split: "cast_to_array" %}
    {% unless access_granted %}
    {% for encoded_lock in encoded_locks %}
      {% assign lock_attributes = encoded_lock | url_decode | split: '&' %}
      {% assign lock_entity_id      = lock_attributes[0] %}
      {% assign lock_type           = lock_attributes[1] %}
      {% assign lock_key            = lock_attributes[2] | url_decode %}
      {% assign lock_escaped_title  = lock_attributes[3] %}

      {% if valid_lock_ids contains lock_entity_id %}
        {% assign page_has_lock = true %}
        {% if lock_type == "password" %}
          {% if authorized_passwords contains lock_key %}
            {% assign access_granted = true %}
          {% else %}
            {% assign show_customer_login = false %}
          {% endif %}
        {% elsif lock_type == "tags" %}
          {% assign lock_tags = lock_key | split: '&' %}
          {% for encoded_lock_tag in lock_tags %}
            {% assign lock_tag = encoded_lock_tag | url_decode %}
            {% if customer.tags contains lock_tag %}
              {% assign access_granted = true %}
            {% endif %}
          {% endfor %}
          {% unless access_granted %}
            {% assign show_customer_login = true %}
          {% endunless %}
        {% endif %}
        {% unless access_granted %}
          {% assign last_login_title = lock_escaped_title | url_decode %}
        {% endunless %}
      {% endif %}
    {% endfor %}
  {% endunless %}

{% elsif template.name == "article" %}
  {% assign encoded_locks = article_locks_str | split: "&" %}
  {% assign valid_lock_ids = article.id | downcase | split: "cast_to_array" %}
    {% unless access_granted %}
    {% for encoded_lock in encoded_locks %}
      {% assign lock_attributes = encoded_lock | url_decode | split: '&' %}
      {% assign lock_entity_id      = lock_attributes[0] %}
      {% assign lock_type           = lock_attributes[1] %}
      {% assign lock_key            = lock_attributes[2] | url_decode %}
      {% assign lock_escaped_title  = lock_attributes[3] %}

      {% if valid_lock_ids contains lock_entity_id %}
        {% assign page_has_lock = true %}
        {% if lock_type == "password" %}
          {% if authorized_passwords contains lock_key %}
            {% assign access_granted = true %}
          {% else %}
            {% assign show_customer_login = false %}
          {% endif %}
        {% elsif lock_type == "tags" %}
          {% assign lock_tags = lock_key | split: '&' %}
          {% for encoded_lock_tag in lock_tags %}
            {% assign lock_tag = encoded_lock_tag | url_decode %}
            {% if customer.tags contains lock_tag %}
              {% assign access_granted = true %}
            {% endif %}
          {% endfor %}
          {% unless access_granted %}
            {% assign show_customer_login = true %}
          {% endunless %}
        {% endif %}
        {% unless access_granted %}
          {% assign last_login_title = lock_escaped_title | url_decode %}
        {% endunless %}
      {% endif %}
    {% endfor %}
  {% endunless %}

{% endif %}



{% if page_has_lock %}
  {% unless access_granted %}
    {% assign page_id = page.id | downcase %}
    {% assign article_id = article.id | downcase %}
    {% assign product_id = product.id | downcase %}
    {% if product.id %}
      {% assign collection_ids = product.collections | map: "id" | join: "," %}
    {% else %}
      {% assign collection_ids = collection.id | downcase %}
    {% endif %}
  {% endunless %}
{% else %}
  {% assign access_granted = true %}
{% endif %}


{% if access_granted %}
  {{ captured_page }}
  {% if page_has_lock %}
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fetch/2.0.4/fetch.min.js"></script>
    <script>
      const uaVerifyAppInstalled = function() {
        // verify app installed
        fetch('/apps/password-protect/uninstalled', {
          method: 'GET',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          }
        }).then(function(response) {
          if (response.status == 404) {
            document.write("<h4>Finish uninstalling MagicPass</h4> <p> This page is protected by MagicPass, which was recently uninstalled from this Shopify store. </p>" +
            "<p> If you are the site admin, follow these steps to remove this page: <a href='https://passwordprotectedpages.upsell-apps.com/help/uninstall' target='_blank'>How to Uninstall MagicPass</a></p>");
            return;
          } else if (response.status != 200) {
            throw new Error('Network response was not ok.');
          }
        }).catch(function(error) {
          console.log('Authentication API Error: ' + error.message);
        });
      }
      window.addEventListener("load", uaVerifyAppInstalled);
    </script>
  {% endif %}
{% else %}
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fetch/2.0.4/fetch.min.js"></script>
  <div style="max-width: 600px; margin: 150px auto; padding: 0 15px;" id="password-protect-login-div">
    <div id="loginMessageContainer" style="text-align: center; padding-bottom: 10px;">
      {{ last_login_title }}
    </div>

    {% if show_customer_login %}
      {% if shop.customer_accounts_enabled %}
        {% if customer %}
          <center>
            <p>You do not have access to this page yet.</p>
          </center>
        {% else %}
          {% assign email_label = 'customer.login.email' | t %}
          {% assign password_label = 'customer.login.password' | t %}
          {% assign forgot_password_label = 'customer.login.forgot_password' | t  %}
          {% assign submit_label = 'customer.login.sign_in' | t %}

          {% if email_label contains 'customer.login.email' %}
            {% assign email_label = 'Email' %}
          {% endif %}
          {% if password_label contains 'customer.login.password' %}
            {% assign password_label = 'Password' %}
          {% endif %}
          {% if forgot_password_label contains 'customer.login.forgot_password' %}
            {% assign forgot_password_label = 'Forgot your password?' %}
          {% endif %}
          {% if submit_label contains 'customer.login.sign_in' %}
            {% assign submit_label = 'Sign In' %}
          {% endif %}

          <div id="CustomerLoginForm" class="form-vertical">
            {% form 'customer_login' %}
              {{ form.errors | default_errors }}
              <input type="hidden" name="checkout_url" value="{{ canonical_url }}" />
              <label for="CustomerEmail">{{ email_label }}</label>
              <input type="email" name="customer[email]" id="CustomerEmail" class="{% if form.errors contains 'email' %} input--error{% endif %}" autocorrect="off" autocapitalize="off" autofocus>
              {% if form.password_needed %}
              <label for="CustomerPassword">{{ password_label }}</label>
              <input type="password" autocorrect="off" autocomplete="off" value="" name="customer[password]" id="CustomerPassword" class="{% if form.errors contains 'password' %} input--error{% endif %}">
              {% endif %}
              <div class="text-center">
                {% if form.password_needed %}
                <p><a href="/account/login#recover">{{ forgot_password_label }}</a></p>
                {% endif %}
                <input type="submit" class="btn" value="{{ submit_label }}">
              </div>
            {% endform %}
          </div>
        {% endif %}
      {% else %}
        <script>document.getElementById('loginMessageContainer').style.display="none";</script>
        <center>
          <h3>Action Needed</h3>
          <p>You are using customer tags to protect this page in MagicPass. You must <a href="https://help.shopify.com/en/manual/sell-online/checkout-settings/customer-accounts" rel="nofollow">enable customer accounts</a> for this to work. </p>
        </center>
      {% endif %}
    {% else %}
      <form onSubmit="uaAuthenticate(); return false;" action="#" id="passwordForm" style="text-align: center;">
        <input name="page_id" value="{{ page_id }}" type="hidden" />
        <input name="article_id" value="{{ article_id }}" type="hidden" />
        <input name="product_id" value="{{ product_id }}" type="hidden" />
        <input name="collection_ids" value="{{ collection_ids }}" type="hidden" />
        <input name="version" value="2" type="hidden" />

        <input id="entity_password" type="password" placeholder="Enter password" name="password" required autofocus />
        <p style="color: red; display: none;" id="passwordError">That password was incorrect. Please try again.</p>

        <input type="submit" class="btn" id="passwordSubmit" value="Submit" />
      </form>
    {% endif %}
  </div>

  <div style="max-width: 600px; margin: 20px auto; display: none;" id="password-protect-uninstall-div">
    <h4>Finish uninstalling MagicPass</h4>
    <p>
      This page is protected by MagicPass, which was recently uninstalled from this Shopify store.
    </p>
    <p>
      If you are the site admin, follow these steps to remove this page: <a href="https://passwordprotectedpages.upsell-apps.com/help/uninstall" target="_blank">How to Uninstall MagicPass</a>
    </p>
  </div>

  <script type="text/javascript">
    // Ajax Get Cart
    const uaGetCart = function() {
      return fetch('/cart.js', {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        credentials: 'same-origin'
      });
    };

    // Ajax Update Cart
    const uaUpdateCart = function(payload) {
      payload = payload || {};
      return fetch('/cart/update.js', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify(payload)
      });
    };

    // Ajax authenticate
    const uaAuthenticate = function() {
      const errorMessage = document.getElementById('passwordError');
      errorMessage.style.display = "none";

      const submitElement = document.getElementById('passwordSubmit');
      submitElement.setAttribute('disabled', true);

      const submittedPassword = document.getElementsByName('password')[0].value;
      const formDataJSON = {
        page_id: document.getElementsByName("page_id")[0].value,
        article_id: document.getElementsByName("article_id")[0].value,
        product_id: document.getElementsByName("product_id")[0].value,
        collection_ids: document.getElementsByName("collection_ids")[0].value,
        version: document.getElementsByName("version")[0].value,
        password: submittedPassword
      };

      var discountCode = null;
      fetch('/apps/password-protect/authenticate', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formDataJSON),
      }).then(function(authenticateResponse) {
        if (authenticateResponse && authenticateResponse.ok) {
          console.log("Authentication Successful");
          return authenticateResponse.json();
        } else if (authenticateResponse.status == 404) {
          console.error("Unable to find a lock for this page.");
        } else if (authenticateResponse.status == 403) {
          errorMessage.style.display = "block";
        }
        throw new Error('Network response was not ok.');
      }).then(function(data) {
        discountCode = data.code;
        return uaGetCart();
      }).then(function(cartResponse) {
        if(cartResponse.ok) {
          return cartResponse.json();
        }
        throw new Error('Network response was not ok.');
      }).then(function(cartData) {
        var new_authorized_passwords = submittedPassword;
        if (cartData.attributes.authorized_passwords) {
          new_authorized_passwords += "," + cartData.attributes.authorized_passwords;
        }
        return uaUpdateCart({attributes: {authorized_passwords: new_authorized_passwords}});
      }).then(function(cartUpdateResponse) {
        console.log("Attributes updated successfully");
        if (discountCode && discountCode.length > 0) {
          var redirectParameter = encodeURIComponent(window.location.pathname + window.location.search);
          location.href = "/discount/" + encodeURIComponent(discountCode) + "?redirect=" + redirectParameter;
        } else {
          location.reload();
        }
      }).catch(function(error) {
        submitElement.removeAttribute('disabled');
        console.log('Authentication API Error: ' + error.message);
      });
      return false;
    };

    const uaVerifyAppInstalled = function() {
      var login_div = document.getElementById("password-protect-login-div");
      if (login_div != null) {
        // verify app installed
        fetch('/apps/password-protect/uninstalled', {
          method: 'GET',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          }
        }).then(function(response) {
          if (response.status == 404) {
            const loginElement = document.getElementById('password-protect-login-div');
            loginElement.style.display = 'none';
            const uninstallElement = document.getElementById('password-protect-uninstall-div');
            uninstallElement.style.display = 'block';
            console.log("App uninstalled confirmed");
            return;
          } else if (response.status != 200) {
            throw new Error('Network response was not ok.');
          }
        }).catch(function(error) {
          console.log('Authentication API Error: ' + error.message);
        });
      }
    };
    window.addEventListener("load", uaVerifyAppInstalled);

  </script>
{% endif %}
